{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azuretables_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azuretables"
    },
    "azuretables_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "qodersfiles"
    },
    "azuretables_1_storageaccount": {
      "type": "string",
      "metadata": {
        "description": "The name of your storage account"
      },
      "defaultValue": "qodersfiles"
    },
    "azuretables_1_sharedkey": {
      "type": "securestring",
      "metadata": {
        "description": "The shared storage key of your storage account"
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "defaultValue": "westeurope"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "QodersAddSiteToBackUp"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "https://graph.microsoft.com/v1.0/sites/@{variables('Tenantname')}:@{variables('ServerRelativeUrl')}",
                "authentication": {
                  "audience": "https://graph.microsoft.com",
                  "clientId": "CLIENT",
                  "secret": "SECRET",
                  "tenant": "TENANT",
                  "type": "ActiveDirectoryOAuth"
                }
              },
              "runAfter": {
                "ServerRelativeUrl": [
                  "Succeeded"
                ]
              }
            },
            "Insert_or_Replace_Entity": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                  }
                },
                "method": "put",
                "body": {
                  "DeltaLink": "https://graph.microsoft.com/v1.0/sites/@{body('HTTP')?['Id']}/drive/root/delta",
                  "PartitionKey": "Sites",
                  "RowKey": "@{body('HTTP')?['Id']}",
                  "SiteUrl": "@{variables('ServerRelativeUrl')}"
                },
                "path": "/Tables/@{encodeURIComponent('sharepointsites')}/entities(PartitionKey='@{encodeURIComponent('Sites')}',RowKey='@{encodeURIComponent(body('HTTP')?['Id'])}')"
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            },
            "ServerRelativeUrl": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ServerRelativeUrl",
                    "type": "string",
                    "value": "@{substring(triggerBody()?['webUrl'],length(concat('https://',variables('Tenantname'))),sub(length(triggerBody()?['webUrl']),length(concat('https://',variables('Tenantname')))))}"
                  }
                ]
              },
              "runAfter": {
                "Tenantname": [
                  "Succeeded"
                ]
              }
            },
            "Tenantname": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Tenantname",
                    "type": "string",
                    "value": "TENANTNAME.sharepoint.com"
                  }
                ]
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "createdTimeUTC": {
                      "type": "string"
                    },
                    "creatorEmail": {
                      "type": "string"
                    },
                    "creatorName": {
                      "type": "string"
                    },
                    "parameters": {
                      "properties": {
                        "event": {
                          "type": "string"
                        },
                        "product": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "webDescription": {
                      "type": "string"
                    },
                    "webUrl": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuretables": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'azuretables')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]",
                "connectionName": "[parameters('azuretables_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azuretables_1_Connection_Name')]",
      "location": "westeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'azuretables')]"
        },
        "displayName": "[parameters('azuretables_1_Connection_DisplayName')]",
        "parameterValues": {
          "storageaccount": "[parameters('azuretables_1_storageaccount')]",
          "sharedkey": "[parameters('azuretables_1_sharedkey')]"
        }
      }
    }
  ],
  "outputs": {}
}